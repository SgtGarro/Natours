---
interface Props {
  isAnimated?: boolean
  type?: 'white'
  to: string
}

const { isAnimated, type, to } = Astro.props
---

<a
  class:list={['btn', type && `btn--${type}`, { 'btn--animated': isAnimated }]}
  href={to}
>
  <slot />
</a>

<style>
  @keyframes moveInBottom {
    0% {
      opacity: 0;
      transform: translateY(3rem);
      pointer-events: none;
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .btn:link,
  .btn:visited {
    position: relative;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.6rem 4rem;
    display: inline-block;
    border-radius: 100px;
    transition: all 0.2s;
  }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }
  .btn::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
  }
  .btn--white {
    background-color: #fff;
    color: #777;
  }
  .btn--white::after {
    background-color: #fff;
  }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
  }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards;
  }
</style>
